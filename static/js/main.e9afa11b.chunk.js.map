{"version":3,"sources":["reducer.js","themes.js","components/settings/Main.js","components/settings/Background.js","actions.js","components/settings/SettingsDialog.js","components/Menu.js","components/Clock.js","components/Page.js","components/App.js","index.js"],"names":["initialState","backgroundType","backgroundColor","backgroundImageUrl","process","customTheme","createMuiTheme","palette","type","connect","state","bgType","bgColor","bgUrl","handleSelect","List","ListItem","button","onClick","ListItemText","primary","secondary","Divider","useStyles","makeStyles","theme","formControl","margin","spacing","group","dispatch","setBackgroundType","setBackgroundColor","color","setBackgroundImage","url","props","classes","React","useState","setState","handleChange","name","value","target","FormControl","component","className","FormLabel","RadioGroup","aria-label","onChange","FormControlLabel","control","Radio","label","TextField","disabled","FormHelperText","event","preventDefault","appBar","position","title","marginLeft","flex","Transition","forwardRef","ref","Slide","direction","SettingsDialog","currentComponent","isOpen","handleClose","view","setView","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","Icon","Typography","variant","Button","menu","width","header","padding","main","contrastText","toggleDrawer","key","isSettingsMenuOpen","setSettingsMenuOpen","Fragment","Drawer","role","onKeyDown","ListItemIcon","currentTime","Date","this","timer","setInterval","clearInterval","toLocaleString","Component","root","minHeight","display","flexDirection","backgroundImage","toolbar","justifyContent","style","textAlign","borderRadius","Menu","reduxStore","createStore","action","ReactDOM","render","store","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.e9afa11b.chunk.js","sourcesContent":["const initialState = {\n  backgroundType: \"image\",\n  backgroundColor: \"#ddf\",\n  backgroundImageUrl: process.env.PUBLIC_URL + \"/files/hubble-extreme-deep-field.jpg\"\n}\n\nexport default (state=initialState, action) => {\n  switch (action.type) {\n\n    case 'SET_BACKGROUND_TYPE':\n      return {\n        ...state,\n        backgroundType: action.bgType\n      }\n\n    case 'SET_BACKGROUND_COLOR': \n      return {\n        ...state, \n        backgroundColor: action.color\n      }\n\n    case 'SET_BACKGROUND_IMAGE':\n      return {\n        ...state,\n        backgroundImageUrl: action.url\n      }\n\n    default:\n      return state\n\n  }\n} ","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst customTheme = createMuiTheme({\n  palette: {\n    type: \"light\"\n  }\n})\n\nexport default customTheme","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  ListItemText,\n  ListItem,\n  List,\n  Divider\n} from '@material-ui/core'\n\n\nconst Main = ({\n  handleSelect, \n  bgType,\n  bgColor, \n  bgUrl\n}) => (\n  <List>\n    <ListItem button onClick={() => (handleSelect(\"background\"))}>\n      <ListItemText \n        primary=\"Background\" \n        secondary={(bgType === \"image\") ? bgUrl : bgColor} \n      />\n    </ListItem>\n    <Divider />\n    <ListItem button>\n      <ListItemText primary=\"Something Else\" secondary=\"\" />\n    </ListItem>\n  </List>\n)\n\nconst mapStateToProps = (state) => (\n  {\n    bgType: state.backgroundType,\n    bgColor: state.backgroundColor,\n    bgUrl: state.backgroundImageUrl\n  }\n)\nexport default connect(mapStateToProps)(Main)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/styles'\nimport { \n  TextField,\n  Radio,\n  RadioGroup,\n  FormHelperText,\n  FormControlLabel,\n  FormControl,\n  FormLabel\n} from '@material-ui/core'\nimport { \n  setBackgroundType,\n  setBackgroundColor, \n  setBackgroundImage \n} from '../../actions'\n\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  group: {\n    margin: theme.spacing(1, 0),\n  },\n}))\n\n\nconst Background = (props) => {\n\n  const {\n    backgroundType,\n    backgroundColor, \n    backgroundImageUrl, \n    setBackgroundType,\n    setBackgroundColor,\n    setBackgroundImage\n  } = props\n  const classes = useStyles()\n  const [state, setState] = React.useState({backgroundType, backgroundColor, backgroundImageUrl})\n\n  const handleChange = (name) => ({target: {value}}) => {\n    setState({\n      ...state,\n      [name]: value\n    })\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setBackgroundType(state.backgroundType)\n    setBackgroundColor(state.backgroundColor)\n    setBackgroundImage(state.backgroundImageUrl)\n  }\n\n  return (\n    <form>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Background Type</FormLabel>\n        <RadioGroup\n          aria-label=\"background-type\"\n          name=\"backgroundType\"\n          className={classes.group}\n          value={state.backgroundType}\n          onChange={handleChange('backgroundType')}\n        >\n          <FormControlLabel \n            value=\"color\" \n            control={<Radio />} \n            label=\"Color\" \n          />\n          <TextField \n            disabled={ (state.backgroundType === \"color\") ? false : true } \n            label=\"Background Color\"\n            value={state.backgroundColor}\n            onChange={handleChange('backgroundColor')}\n          />\n          <FormControlLabel \n            value=\"image\" \n            control={<Radio />} \n            label=\"Image\" \n          />\n          <TextField \n            disabled={ (state.backgroundType === \"image\") ? false : true } \n            label=\"Background Image URL\"\n            value={state.backgroundImageUrl}\n            onChange={handleChange('backgroundImageUrl')}\n          />\n        </RadioGroup>\n        <FormHelperText>You can configure your background here.</FormHelperText>\n        <button onClick={handleSubmit}>\n          Save\n        </button>\n      </FormControl>\n      \n    </form>\n  )\n}\n\nconst mapStateToProps = (state) => (\n  {\n    backgroundType: state.backgroundType,\n    backgroundColor: state.backgroundColor,\n    backgroundImageUrl: state.backgroundImageUrl\n  }\n)\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    setBackgroundType: (bgType) => dispatch(setBackgroundType(bgType)),\n    setBackgroundColor: (color) => dispatch(setBackgroundColor(color)),\n    setBackgroundImage: (url) => dispatch(setBackgroundImage(url)),\n  }\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Background)","export const setBackgroundType = (bgType) => ({ type: \"SET_BACKGROUND_TYPE\", bgType })\nexport const setBackgroundColor = (color) => ({ type: \"SET_BACKGROUND_COLOR\", color })\nexport const setBackgroundImage = (url) => ({ type: \"SET_BACKGROUND_IMAGE\", url })","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Button,\n  Dialog,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Icon,\n  Slide\n} from '@material-ui/core'\nimport Main from './Main'\nimport Background from './Background'\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\n\nconst SettingsDialog = (props) => {\n\n  const { \n    isOpen, \n    handleClose\n  } = props\n  const classes = useStyles()\n  const [view, setView] = React.useState(\"main\")\n  const handleSelect = (view) => setView(view)\n  const handleDialogClose = () => {\n    handleClose()\n    setView(\"main\")\n  }\n\n  let currentComponent\n  switch (view) {\n    case 'background': \n      currentComponent = <Background />\n      break\n    default:\n      // main\n      currentComponent = <Main handleSelect={handleSelect} />\n  }\n\n  return (\n    <Dialog \n      fullScreen \n      open={isOpen} \n      onClose={handleClose} \n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton \n            edge=\"start\" \n            color=\"inherit\" \n            onClick={handleDialogClose} \n            aria-label=\"close\"\n          >\n            <Icon>close</Icon>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            App Settings\n          </Typography>\n          {\n            (view === \"main\") \n            ? null \n            : <Button color=\"inherit\" onClick={() => (handleSelect(\"main\"))}>back</Button>\n          }\n        </Toolbar>\n      </AppBar>\n      {currentComponent}\n    </Dialog>\n  )\n}\n\nexport default SettingsDialog","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport {\n  Drawer,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  Icon,\n  Typography\n} from '@material-ui/core'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport MailIcon from '@material-ui/icons/Mail'\nimport SettingsDialog from './settings/SettingsDialog'\n\n\nconst useStyles = makeStyles(theme => ({\n  menu: {\n    width: 250\n  },\n  header: {\n    padding: theme.spacing(1, 2),\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  }\n}))\n\n\nexport default () => {\n  const classes = useStyles()\n\n  // drawer\n  const [state, setState] = React.useState({ isOpen: false })\n  const toggleDrawer = (isOpen) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return\n    }\n    setState({ isOpen: isOpen })\n  }\n\n  // settings\n  const [isSettingsMenuOpen, setSettingsMenuOpen] = React.useState(false)\n  function handleSettingsMenuOpen() {\n    setSettingsMenuOpen(true)\n  }\n  function handleSettingsMenuClose() {\n    setSettingsMenuOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n      <Button onClick={toggleDrawer(true)}>\n        <Icon>dehaze</Icon>\n      </Button>\n      <Drawer open={state.isOpen} onClose={toggleDrawer(false)}>\n        <div className={classes.header}>\n          <Typography variant=\"h4\">\n            Menu\n          </Typography>\n        </div>\n        <Divider />\n        <div\n          className={classes.menu}\n          role=\"presentation\"\n          onClick={toggleDrawer(false)}\n          onKeyDown={toggleDrawer(false)}\n        >\n          <List>\n            <ListItem button onClick={handleSettingsMenuOpen}>\n              <ListItemIcon><Icon>more_vert</Icon></ListItemIcon>\n              <ListItemText primary=\"Settings\" />\n            </ListItem>\n          </List>\n          <Divider />\n          <List>\n            <ListItem button>\n              <ListItemIcon><InboxIcon /></ListItemIcon>\n              <ListItemText primary=\"Files\" />\n            </ListItem>\n            <ListItem button>\n              <ListItemIcon><MailIcon /></ListItemIcon>\n              <ListItemText primary=\"Mail\" />\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n      <SettingsDialog \n        isOpen={isSettingsMenuOpen} \n        handleClose={handleSettingsMenuClose}\n      />\n    </React.Fragment>\n  )\n}","import React from 'react'\n\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentTime: new Date()\n    }\n  }\n\n  componentDidMount() {\n    this.timer = setInterval( () => {\n      this.setState({\n        currentTime: new Date()\n      })\n    }, 1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n  }\n  \n  render() {\n    return <span>{this.state.currentTime.toLocaleString()}</span>\n  }\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport { connect } from 'react-redux'\nimport { \n  Toolbar,\n  Typography\n} from '@material-ui/core'\nimport Menu from './Menu'\nimport Clock from './Clock'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  main: ({bgType, bgColor, bgUrl}) => ({\n    flex: 1,\n    backgroundColor: (bgType === \"color\" ? bgColor : \"transparent\"),\n    backgroundImage: (bgType === \"image\" ? `url(${bgUrl})` : null)\n  }),\n  toolbar: {\n    flex: 0,\n    backgroundColor: \"#aaf\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  }\n}))\n\n\nconst Page = ({bgType, bgColor, bgUrl}) => {\n  const classes = useStyles({bgType, bgColor, bgUrl})\n  return (\n    <div className={classes.root}>\n      <div className={classes.main}>\n        <div style={{textAlign: \"center\"}}>\n          <Typography \n            variant=\"h2\" \n            component=\"span\" \n            style={{\n              backgroundColor: \"RGBA(255,255,255,0.5)\",\n              borderRadius: \"0 0 30px 30px\",\n              padding: \"0px 30px 10px\",\n            }}\n          >\n            WebOS\n          </Typography>\n        </div>\n      </div>\n      <Toolbar className={classes.toolbar}>\n        <Menu />\n        <Typography variant=\"h4\">\n          Toolbar\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          <Clock />\n        </Typography>\n      </Toolbar>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => (\n  {\n    bgType: state.backgroundType,\n    bgColor: state.backgroundColor,\n    bgUrl: state.backgroundImageUrl\n  }\n)\n\nexport default connect(mapStateToProps)(Page)","import React from 'react'\nimport 'typeface-roboto'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { CssBaseline } from '@material-ui/core'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport reducer from '../reducer'\nimport customTheme from '../themes'\nimport Page from './Page'\n\nconst reduxStore = createStore(reducer)\n\n\nexport default () => {\n  return (\n    <Provider store={reduxStore} >\n      <ThemeProvider theme={customTheme}>\n        <CssBaseline />\n        <Page />\n      </ThemeProvider>\n    </Provider>\n  )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}